


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui m?me)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    9 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   10 00000000         
   11 00000000         ; The GPIODATA register is the data register
   12 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   13 00000000         
   14 00000000         ; configure the corresponding pin to be an output
   15 00000000         ; all GPIO pins are inputs by default
   16 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   17 00000000         
   18 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   19 00000000         ; By default, all GPIO pins have 2-mA drive.
   20 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   21 00000000         
   22 00000000         ; Digital enable register
   23 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   24 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   25 00000000         
   26 00000000         ; blinking frequency
   27 00000000 0008CCCC 
                       ONE_CM_PER_S
                               EQU              0x0008CCCC  ; 1cm/seconde => if
                                                             speed = 0x0C0
   28 00000000         
   29 00000000         
   30 00000000                 ENTRY



ARM Macro Assembler    Page 2 


   31 00000000                 EXPORT           __main
   32 00000000         
   33 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   34 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   35 00000000         
   36 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   37 00000000                 IMPORT           MOTEUR_DROIT_OFF ; d?activer le
                                                             moteur droit
   38 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   39 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arri?re
   40 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   41 00000000         
   42 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   43 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; d?activer l
                                                            e moteur gauche
   44 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   45 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arri?re
   46 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   47 00000000         
   48 00000000                 IMPORT           LEDS_ON
   49 00000000                 IMPORT           LEDS_OFF
   50 00000000                 IMPORT           LED_DROITE_ON
   51 00000000                 IMPORT           LED_DROITE_OFF
   52 00000000                 IMPORT           LED_GAUCHE_ON
   53 00000000                 IMPORT           LED_GAUCHE_OFF
   54 00000000         
   55 00000000                 IMPORT           WAIT_SECOND
   56 00000000         
   57 00000000         __main
   58 00000000         
   59 00000000         
   60 00000000         ; ;; Enable the Port F peripheral clock by setting bit 5
                        (0x20 == 0b100000)  (p291 datasheet de lm3s9B96.pdf)
   61 00000000         ; ;;               (GPIO::FEDCBA)
   62 00000000 4E16            ldr              r6, = SYSCTL_PERIPH_GPIOF 
                                                            ;; RCGC2
   63 00000002 F04F 0020       mov              r0, #0x00000020 ;; Enable clock
                                                             sur GPIO F o? sont
                                                             branch?s les leds 
                                                            (0x20 == 0b100000)
   64 00000006         ; ;;                         (GPIO::FEDCBA)
   65 00000006 6030            str              r0, [r6]



ARM Macro Assembler    Page 3 


   66 00000008         
   67 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   68 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   69 0000000A BF00            nop
   70 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   71 0000000E         
   72 0000000E         ;; BL Branchement vers un lien (sous programme)
   73 0000000E         
   74 0000000E         ; Configure les PWM + GPIO
   75 0000000E F7FF FFFE       BL               MOTEUR_INIT
   76 00000012         
   77 00000012         loop
   78 00000012         ; Activer les deux moteurs droit et gauche
   79 00000012 F7FF FFFE       BL               MOTEUR_DROIT_ON
   80 00000016 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
   81 0000001A         
   82 0000001A         ; Evalbot avance droit devant
   83 0000001A F7FF FFFE       BL               MOTEUR_DROIT_AVANT
   84 0000001E F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
   85 00000022         
   86 00000022 F04F 080D       mov              r8, #0x0D   ;; distance Ã  parc
                                                            ourir en CM
   87 00000026 F000 F810       BL               BROWSE_R8_CM ; Parcours la dist
                                                            ance contenu par r8
                                                             en CM
   88 0000002A         
   89 0000002A F7FF FFFE       BL               MOTEUR_DROIT_OFF
   90 0000002E F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
   91 00000032         
   92 00000032 F7FF FFFE       BL               LED_GAUCHE_ON
   93 00000036         
   94 00000036 F7FF FFFE       BL               WAIT_SECOND ;; attend une secon
                                                            de
   95 0000003A         
   96 0000003A F7FF FFFE       BL               LED_GAUCHE_OFF
   97 0000003E         
   98 0000003E E7E8            b                loop
   99 00000040         
  100 00000040         
  101 00000040         ;; FIN DU PROGRAMME => Add "si bumper => END_PROG"
  102 00000040         END_PROG
  103 00000040         ;; Set motors OFF
  104 00000040 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  105 00000044 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  106 00000048 4770            BX               LR
  107 0000004A         
  108 0000004A         ;; Parcour x cm, avec x = r8
  109 0000004A         BROWSE_R8_CM
  110 0000004A 4905            ldr              r1, =ONE_CM_PER_S
  111 0000004C FB08 F801       MUL              r8, r8, r1
  112 00000050         wait2
  113 00000050 F1B8 0801       subs             r8, #1
  114 00000054 D1FC            bne              wait2
  115 00000056 4770            BX               LR
  116 00000058         



ARM Macro Assembler    Page 4 


  117 00000058 BF00            NOP
  118 0000005A                 END
              00 00 400FE108 
              0008CCCC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --depend=.\ob
jects\rk_moteur_leds_bumpers.d -o.\objects\rk_moteur_leds_bumpers.o -I.\RTE\_Ta
rget_1 -IC:\Users\raph\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Inclu
de -IC:\Users\raph\AppData\Local\Arm\Packs\Keil\LM3S_DFP\1.1.0\Device\Include -
-predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine
="_RTE_ SETA 1" --predefine="LM3S9B92 SETA 1" --list=.\listings\rk_moteur_leds_
bumpers.lst src\RK_Moteur_Leds_Bumpers.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: .text unused
BROWSE_R8_CM 0000004A

Symbol: BROWSE_R8_CM
   Definitions
      At line 109 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 87 in file src\RK_Moteur_Leds_Bumpers.s
Comment: BROWSE_R8_CM used once
END_PROG 00000040

Symbol: END_PROG
   Definitions
      At line 102 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: END_PROG unused
__main 00000000

Symbol: __main
   Definitions
      At line 57 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 31 in file src\RK_Moteur_Leds_Bumpers.s
Comment: __main used once
loop 00000012

Symbol: loop
   Definitions
      At line 77 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 98 in file src\RK_Moteur_Leds_Bumpers.s
Comment: loop used once
wait2 00000050

Symbol: wait2
   Definitions
      At line 112 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 114 in file src\RK_Moteur_Leds_Bumpers.s
Comment: wait2 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 24 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: GPIO_O_DEN unused
GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 16 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: GPIO_O_DIR unused
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 20 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: GPIO_O_DR2R unused
GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 12 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: GPIO_PORTF_BASE unused
ONE_CM_PER_S 0008CCCC

Symbol: ONE_CM_PER_S
   Definitions
      At line 27 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 110 in file src\RK_Moteur_Leds_Bumpers.s
Comment: ONE_CM_PER_S used once
SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 9 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 62 in file src\RK_Moteur_Leds_Bumpers.s
Comment: SYSCTL_PERIPH_GPIOF used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LEDS_OFF 00000000

Symbol: LEDS_OFF
   Definitions
      At line 49 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: LEDS_OFF unused
LEDS_ON 00000000

Symbol: LEDS_ON
   Definitions
      At line 48 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: LEDS_ON unused
LED_DROITE_OFF 00000000

Symbol: LED_DROITE_OFF
   Definitions
      At line 51 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: LED_DROITE_OFF unused
LED_DROITE_ON 00000000

Symbol: LED_DROITE_ON
   Definitions
      At line 50 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: LED_DROITE_ON unused
LED_GAUCHE_OFF 00000000

Symbol: LED_GAUCHE_OFF
   Definitions
      At line 53 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 96 in file src\RK_Moteur_Leds_Bumpers.s
Comment: LED_GAUCHE_OFF used once
LED_GAUCHE_ON 00000000

Symbol: LED_GAUCHE_ON
   Definitions
      At line 52 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 92 in file src\RK_Moteur_Leds_Bumpers.s
Comment: LED_GAUCHE_ON used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 39 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: MOTEUR_DROIT_ARRIERE unused
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 38 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 83 in file src\RK_Moteur_Leds_Bumpers.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 40 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 37 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 89 in file src\RK_Moteur_Leds_Bumpers.s
      At line 104 in file src\RK_Moteur_Leds_Bumpers.s

MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 36 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 79 in file src\RK_Moteur_Leds_Bumpers.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 45 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ARRIERE unused
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 44 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 84 in file src\RK_Moteur_Leds_Bumpers.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 46 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 43 in file src\RK_Moteur_Leds_Bumpers.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

   Uses
      At line 90 in file src\RK_Moteur_Leds_Bumpers.s
      At line 105 in file src\RK_Moteur_Leds_Bumpers.s

MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 42 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 80 in file src\RK_Moteur_Leds_Bumpers.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 34 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 75 in file src\RK_Moteur_Leds_Bumpers.s
Comment: MOTEUR_INIT used once
WAIT_SECOND 00000000

Symbol: WAIT_SECOND
   Definitions
      At line 55 in file src\RK_Moteur_Leds_Bumpers.s
   Uses
      At line 94 in file src\RK_Moteur_Leds_Bumpers.s
Comment: WAIT_SECOND used once
18 symbols
366 symbols in table
